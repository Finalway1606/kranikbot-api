#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Skrypt do sprawdzenia aktualnych punkt√≥w u≈ºytkownik√≥w
"""

import sqlite3

def check_points():
    try:
        conn = sqlite3.connect('users.db')
        cursor = conn.cursor()
        
        # Sprawd≈∫ wszystkich u≈ºytkownik√≥w z "sniff" w nazwie
        cursor.execute("SELECT username, points FROM users WHERE LOWER(username) LIKE '%sniff%' ORDER BY points DESC")
        sniff_results = cursor.fetchall()
        
        print("üîç U≈ºytkownicy z 'sniff' w nazwie:")
        if sniff_results:
            for username, points in sniff_results:
                print(f"  {username}: {points} punkt√≥w")
        else:
            print("  Brak u≈ºytkownik√≥w z 'sniff' w nazwie")
        
        # Sprawd≈∫ konkretnych u≈ºytkownik√≥w
        cursor.execute("SELECT username, points FROM users WHERE username IN ('sniffurious', 'omayakaboom', 'Sniffurious') ORDER BY points DESC")
        results = cursor.fetchall()
        
        print("\nüîç Konkretni u≈ºytkownicy:")
        if results:
            for username, points in results:
                print(f"  {username}: {points} punkt√≥w")
        else:
            print("  Brak danych dla tych u≈ºytkownik√≥w")
        
        # Sprawd≈∫ top 10 u≈ºytkownik√≥w
        cursor.execute("SELECT username, points FROM users ORDER BY points DESC LIMIT 10")
        top_users = cursor.fetchall()
        
        print("\nüèÜ Top 10 u≈ºytkownik√≥w:")
        for i, (username, points) in enumerate(top_users, 1):
            print(f"  {i}. {username}: {points} punkt√≥w")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå B≈ÇƒÖd: {e}")

if __name__ == "__main__":
    check_points()